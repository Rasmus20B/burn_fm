table Person:
  primaryKey: Unique, Required, Text, {get(uuid)},
  !{!isEmpty(primaryKey)},
  "Used as a primary key for the Person Table",

  firstName: Text,

  lastName: Text,

  sex: Text, foundIn[male_female],
  age: Number,
  jobid: Text,
end table;

table Job:
  PrimaryKey: Unique, Required, Text, {get(uuid)},
  !{!isEmpty(primary)},
  "Used as a primary key for the Job table",
end table;

value_list male_female:
  "male", "female"
end value_list;

relationship PersonToJob:
  Person:Job,
  jobid == PrimaryKey,
end relationship;

script: [
  define basic_script(x, y) {
    set_variable(i, x);
    loop {
      exit_loop_if(i == y);
      set_variable(i, i + 1);
    }
    exit(i);
  }
]

test BasicTest:
  script: [
    define test() {
      basic_script(2, 10);
    }
  ],
  assertions:
    (assert (empty? (Person)) (False)),
    (assert_eq (Eq Person[0] (Person (
      firstName: "Kevin",
      lastName: "Matthews",
      sex: "male",
      age: 50,
      jobid: null
    )))),
end test;




